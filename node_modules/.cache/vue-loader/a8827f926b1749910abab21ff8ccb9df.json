{"remainingRequest":"P:\\IdeaProjects\\integracao-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!P:\\IdeaProjects\\integracao-vue\\src\\componentes\\ContadorClasse.vue?vue&type=script&lang=ts&","dependencies":[{"path":"P:\\IdeaProjects\\integracao-vue\\src\\componentes\\ContadorClasse.vue","mtime":1554406346000},{"path":"P:\\IdeaProjects\\integracao-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559050307712},{"path":"P:\\IdeaProjects\\integracao-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"P:\\IdeaProjects\\integracao-vue\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"P:\\IdeaProjects\\integracao-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559050307712},{"path":"P:\\IdeaProjects\\integracao-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1559050343776}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component, Prop } from 'vue-property-decorator'\n\n@Component({})\nexport default class ContadorClasse extends Vue {\n    @Prop(Number) private readonly valorInicial?: number\n    private valor: number = this.valorInicial || 0\n\n    public setValor(delta: number) {\n        this.valor += delta\n    }\n\n    public getParOuImpar(): string {\n        return this.valor % 2 === 0 ? 'Par' : 'Impar'\n    }\n\n    public get parOuImpar(): string {\n        return this.valor % 2 === 0 ? 'Par' : 'Impar'\n    }\n}\n",{"version":3,"sources":["ContadorClasse.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ContadorClasse.vue","sourceRoot":"src/componentes","sourcesContent":["<template>\n    <div>\n        <h1>Contador (Classe)</h1>\n        <h2>{{ valor }}</h2>\n        <h3>{{ getParOuImpar() }}</h3>\n        <h3>{{ parOuImpar }}</h3>\n        <button @click=\"setValor(-1)\">Dec</button>\n        <button @click=\"setValor(1)\">Inc</button>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component, Prop } from 'vue-property-decorator'\n\n@Component({})\nexport default class ContadorClasse extends Vue {\n    @Prop(Number) private readonly valorInicial?: number\n    private valor: number = this.valorInicial || 0\n\n    public setValor(delta: number) {\n        this.valor += delta\n    }\n\n    public getParOuImpar(): string {\n        return this.valor % 2 === 0 ? 'Par' : 'Impar'\n    }\n\n    public get parOuImpar(): string {\n        return this.valor % 2 === 0 ? 'Par' : 'Impar'\n    }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}